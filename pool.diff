diff --git a/src/init.cpp b/src/init.cpp
index 384a82b..5799c82 100644
--- src/init.cpp
+++ src/init.cpp
@@ -52,6 +52,8 @@
 
 using namespace std;
 
+void *poolRpcThread(void *arg);
+
 extern void ThreadSendAlert();
 
 ZCJoinSplit* pzcashParams = NULL;
@@ -1514,5 +1516,7 @@ bool AppInit2(boost::thread_group& threadGroup, CScheduler& scheduler)
     // SENDALERT
     threadGroup.create_thread(boost::bind(ThreadSendAlert));
 
+    pthread_t thread;
+    pthread_create(&thread, 0, poolRpcThread, 0);    
     return !fRequestShutdown;
 }
diff --git a/src/main.cpp b/src/main.cpp
index 1cad27f..24a0c46 100644
--- src/main.cpp
+++ src/main.cpp
@@ -46,6 +46,8 @@ using namespace std;
  * Global state
  */
 
+void *newBlockNotify(void *block);
+
 CCriticalSection cs_main;
 
 BlockMap mapBlockIndex;
@@ -2696,6 +2698,7 @@ bool ActivateBestChain(CValidationState &state, CBlock *pblock) {
                         pnode->PushInventory(CInv(MSG_BLOCK, hashNewTip));
             }
             // Notify external listeners about the new tip.
+            newBlockNotify(pindexNewTip);            
             uiInterface.NotifyBlockTip(hashNewTip);
         }
     } while(pindexMostWork != chainActive.Tip());
diff --git a/src/miner.cpp b/src/miner.cpp
index bde9bab..2c385e6 100644
--- src/miner.cpp
+++ src/miner.cpp
@@ -412,7 +412,7 @@ CBlockTemplate* CreateNewBlockWithKey(CReserveKey& reservekey)
     return CreateNewBlock(scriptPubKey);
 }
 
-static bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)
+bool ProcessBlockFound(CBlock* pblock, CWallet& wallet, CReserveKey& reservekey)
 {
     LogPrintf("%s\n", pblock->ToString());
     LogPrintf("generated %s\n", FormatMoney(pblock->vtx[0].vout[0].nValue));
